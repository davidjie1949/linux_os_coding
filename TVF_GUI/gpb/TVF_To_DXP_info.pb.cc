// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TVF_To_DXP_info.proto

#include "TVF_To_DXP_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ford {
namespace av {
namespace taas {
class __ApiVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<__ApiVersion>
      _instance;
} ___ApiVersion_default_instance_;
}  // namespace taas
}  // namespace av
}  // namespace ford
namespace protobuf_TVF_5fTo_5fDXP_5finfo_2eproto {
void InitDefaults__ApiVersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ford::av::taas::___ApiVersion_default_instance_;
    new (ptr) ::ford::av::taas::__ApiVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ford::av::taas::__ApiVersion::InitAsDefaultInstance();
}

void InitDefaults__ApiVersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults__ApiVersionImpl);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ford::av::taas::__ApiVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ford::av::taas::__ApiVersion)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ford::av::taas::___ApiVersion_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TVF_To_DXP_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025TVF_To_DXP_info.proto\022\014ford.av.taas\"@\n"
      "\014__ApiVersion\"0\n\003Ver\022\t\n\005minor\020\000\022\017\n\013file_"
      "update\020\000\022\t\n\005major\020\001\032\002\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TVF_To_DXP_info.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_TVF_5fTo_5fDXP_5finfo_2eproto
namespace ford {
namespace av {
namespace taas {
const ::google::protobuf::EnumDescriptor* __ApiVersion_Ver_descriptor() {
  protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::file_level_enum_descriptors[0];
}
bool __ApiVersion_Ver_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const __ApiVersion_Ver __ApiVersion::minor;
const __ApiVersion_Ver __ApiVersion::file_update;
const __ApiVersion_Ver __ApiVersion::major;
const __ApiVersion_Ver __ApiVersion::Ver_MIN;
const __ApiVersion_Ver __ApiVersion::Ver_MAX;
const int __ApiVersion::Ver_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void __ApiVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

__ApiVersion::__ApiVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::InitDefaults__ApiVersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ford.av.taas.__ApiVersion)
}
__ApiVersion::__ApiVersion(const __ApiVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ford.av.taas.__ApiVersion)
}

void __ApiVersion::SharedCtor() {
  _cached_size_ = 0;
}

__ApiVersion::~__ApiVersion() {
  // @@protoc_insertion_point(destructor:ford.av.taas.__ApiVersion)
  SharedDtor();
}

void __ApiVersion::SharedDtor() {
}

void __ApiVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* __ApiVersion::descriptor() {
  ::protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const __ApiVersion& __ApiVersion::default_instance() {
  ::protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::InitDefaults__ApiVersion();
  return *internal_default_instance();
}

__ApiVersion* __ApiVersion::New(::google::protobuf::Arena* arena) const {
  __ApiVersion* n = new __ApiVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void __ApiVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:ford.av.taas.__ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool __ApiVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ford.av.taas.__ApiVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ford.av.taas.__ApiVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ford.av.taas.__ApiVersion)
  return false;
#undef DO_
}

void __ApiVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ford.av.taas.__ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ford.av.taas.__ApiVersion)
}

::google::protobuf::uint8* __ApiVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ford.av.taas.__ApiVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ford.av.taas.__ApiVersion)
  return target;
}

size_t __ApiVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ford.av.taas.__ApiVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void __ApiVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ford.av.taas.__ApiVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const __ApiVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const __ApiVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ford.av.taas.__ApiVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ford.av.taas.__ApiVersion)
    MergeFrom(*source);
  }
}

void __ApiVersion::MergeFrom(const __ApiVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ford.av.taas.__ApiVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void __ApiVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ford.av.taas.__ApiVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void __ApiVersion::CopyFrom(const __ApiVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ford.av.taas.__ApiVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool __ApiVersion::IsInitialized() const {
  return true;
}

void __ApiVersion::Swap(__ApiVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void __ApiVersion::InternalSwap(__ApiVersion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata __ApiVersion::GetMetadata() const {
  protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TVF_5fTo_5fDXP_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace taas
}  // namespace av
}  // namespace ford

// @@protoc_insertion_point(global_scope)
